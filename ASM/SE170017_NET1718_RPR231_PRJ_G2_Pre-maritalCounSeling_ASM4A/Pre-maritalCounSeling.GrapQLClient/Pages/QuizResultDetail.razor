@page "/QuizResults/Detail/{Id}"
@using Pre_maritalCounseling.GraphQLClient.GraphQL
@inject GraphQLConsumer graphQLConsumer

<div class="container mt-5">
    <div class="card shadow-lg p-4 rounded-4">
        <h3 class="mb-4 text-center text-primary fw-bold">Quiz Result Details</h3>

        @if (quizResult == null && errorMessage == null)
        {
            <div class="text-center">
                <p>Loading...</p>
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
        }
        else if (errorMessage != null)
        {
            <div class="alert alert-danger text-center" role="alert">
                @errorMessage
            </div>
        }
        else
        {
            <div class="row">
                <div class="col-md-6">
                    <dl class="row">
                        <dt class="col-sm-4">ID:</dt>
                        <dd class="col-sm-8">@quizResult.Id</dd>

                        <dt class="col-sm-4">Score:</dt>
                        <dd class="col-sm-8">@quizResult.Score</dd>

                        <dt class="col-sm-4">Quiz ID:</dt>
                        <dd class="col-sm-8">@quizResult.QuizId</dd>

                        <dt class="col-sm-4">User ID:</dt>
                        <dd class="col-sm-8">@quizResult.UserId</dd>

                        <dt class="col-sm-4">Result Code:</dt>
                        <dd class="col-sm-8">@quizResult.QuizResultCode</dd>
                    </dl>
                </div>
                <div class="col-md-6">
                    <dl class="row">
                        <dt class="col-sm-4">Time Completed:</dt>
                        <dd class="col-sm-8">@quizResult.TimeCompleted</dd>

                        <dt class="col-sm-4">Attempt Time:</dt>
                        <dd class="col-sm-8">@quizResult.AttemptTime</dd>

                        <dt class="col-sm-4">Has Feedback:</dt>
                        <dd class="col-sm-8">@quizResult.DoHaveFeedback</dd>

                        <dt class="col-sm-4">Feedback:</dt>
                        <dd class="col-sm-8">@quizResult.FeedBack</dd>

                        <dt class="col-sm-4">Suggestion:</dt>
                        <dd class="col-sm-8">@quizResult.SuggestionContent</dd>
                    </dl>
                </div>
            </div>
            <div class="mt-4">
                <a href="/QuizResults/QuizResultList" class="btn btn-secondary">Back to List</a>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public string Id { get; set; } = string.Empty;

    private QuizResult? quizResult;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            quizResult = await graphQLConsumer.GetByIdAsync(Id);
            if (quizResult == null)
            {
                errorMessage = "Quiz result not found";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error fetching quiz result: {ex.Message}";
        }
    }
}